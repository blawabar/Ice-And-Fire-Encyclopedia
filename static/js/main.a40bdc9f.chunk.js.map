{"version":3,"sources":["data/constants.ts","layouts/AppHeader/AppHeader.tsx","data/types/character-types.ts","utils/index.tsx","data/api-provider.ts","hooks/useHouseFetcher.tsx","hooks/useColumnsRenderer.tsx","hooks/useNavBarSelector.tsx","hooks/useToolbarSelector.tsx","hooks/useCharactersPageSelector.tsx","components/CharactersTable/TableRow.tsx","components/CharactersTable/TableBody.tsx","components/CharactersTable/TableHead.tsx","components/CharactersTable/CharactersTable.tsx","components/ErrorInfo/ErrorInfo.tsx","components/LoadingIndicator/LoadingIndicator.tsx","data/actions.ts","components/PageButton/PageButton.tsx","components/NavBar/NavBar.tsx","components/Toolbar/Toolbar.tsx","pages/CharactersPage/CharactersPage.tsx","components/HouseDetailsList/HouseDetailsList.tsx","components/NavigationButton/NavigationButton.tsx","pages/HousePage/HousePage.tsx","layouts/PageHolder/PageHolder.tsx","app/App.tsx","data/reducer.ts","index.tsx","data/store.ts"],"names":["CharacterColumnName","AppHeader","className","HOUSE_URL","API_BASE_URL","CHARACTERS_ENDPOINT","HOUSES_ENDPOINT","HOUSE_DETAILS_DICTIONARY","region","coatOfArms","words","titles","seats","diedOut","overlord","cadetBranches","CharactersActionTypes","CHARACTERS_COLUMNS_NAMES","Character","Alive","Gender","Culture","Allegiances","NumberOfBooks","extractQueryParams","args","Object","entries","filter","value","Boolean","map","key","join","extractLastPageNumber","headers","parseInt","get","split","path","includes","match","APIProvider","houseId","fetch","response","ok","status","json","data","errorMessage","Error","queryParams","lastPage","useHouseFetcher","useState","isLoading","state","setState","loadHouse","a","getHouseData","prev","error","toString","useEffect","useColumnsRenderer","columnsNames","name","aliases","born","died","gender","culture","allegiances","books","url","columnName","index","columnValue","isNameSet","areAliasesSet","characterNames","resolveCharacterNames","isBornValueSet","isDiedValueSet","aliveInfo","bornYears","yearOfDeath","yearOfBirth","length","Math","max","characterAge","resolveCharacterAliveInfo","localUrl","substring","lastIndexOf","to","resolveAllegiancesList","useNavBarSelector","useSelector","rootPageSize","requestData","pageSize","currentPage","rootCurrentPage","rootLastPage","isNavBarHidden","isDisplayingFirstPage","isDisplayingLastPage","useToolbarSelector","rootGender","rootCulture","isToolbarDisabled","useCharactersPageSelector","TableRow","columns","TableBody","character","TableHead","CharactersTable","ErrorInfo","errorMsg","LoadingIndicator","resourceName","getCharactersFailure","payload","type","GET_CHARACTERS_FAILURE","SetCharactersPagination","SET_CHARACTERS_PAGINATION","PageButton","isDisabled","label","rest","disabled","NavBar","dispatch","useDispatch","rowsPerPage","setRowsPerPage","setCurrentPage","page","onChange","evt","target","onClick","Toolbar","setCulture","setGender","SET_CHARACTERS_FILTER","htmlFor","id","isCultureReset","isCultureValueValid","trim","CharactersPage","GET_CHARACTERS_REQUEST","getCharacters","GET_CHARACTERS_SUCCESS","pageBody","renderListItems","houseDetailsDictionary","houseData","houseDetailsKeys","keys","propertyName","propertyTitle","propertyValue","getPropertyValue","HouseDetailsList","NavigationButton","link","linkText","HousePage","useParams","pageContent","PageHolder","exact","strict","component","App","INITIAL_STATE","charactersReducer","action","store","storeEnhancer","composeWithDevTools","applyMiddleware","thunk","createStore","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a40bdc9f.chunk.js","sourcesContent":["import { HouseDetailsDictionary } from \"./types/house-types\";\r\n\r\nexport const ROOT_URL = \"/\";\r\nexport const HOUSE_URL = \"/house\";\r\n\r\nconst API_BASE_URL = \"https://anapioficeandfire.com/api\";\r\n\r\nexport const CHARACTERS_ENDPOINT = `${API_BASE_URL}/characters`;\r\nexport const HOUSES_ENDPOINT = `${API_BASE_URL}/houses`;\r\n\r\nexport const HOUSE_FETCHING_ERROR_MSG =\r\n  \"Could not find any house that matches the request, try again!\";\r\n\r\nexport const HOUSE_DETAILS_DICTIONARY: HouseDetailsDictionary = {\r\n  region: \"Region\",\r\n  coatOfArms: \"Coat Of Arms\",\r\n  words: \"Words\",\r\n  titles: \"Titles\",\r\n  seats: \"Seats\",\r\n  diedOut: \"Has died out\",\r\n  overlord: \"Has overlord\",\r\n  cadetBranches: \"Number of Cadet Branches\",\r\n};\r\n\r\nexport enum CharacterColumnName {\r\n  Character = \"Character\",\r\n  Alive = \"Alive\",\r\n  Gender = \"Gender\",\r\n  Culture = \"Culture\",\r\n  Allegiances = \"Allegiances\",\r\n  NumberOfBooks = \"# of Books\",\r\n}\r\n\r\nexport const CHARACTERS_COLUMNS_NAMES = [\r\n  CharacterColumnName.Character,\r\n  CharacterColumnName.Alive,\r\n  CharacterColumnName.Gender,\r\n  CharacterColumnName.Culture,\r\n  CharacterColumnName.Allegiances,\r\n  CharacterColumnName.NumberOfBooks,\r\n];\r\n","import React from \"react\";\r\n\r\nimport \"./AppHeader.scss\";\r\n\r\nconst AppHeader: React.FC = () => {\r\n  return (\r\n    <header className=\"app-header\">\r\n      <h1 className=\"app-header__text\">Encyclopedia Of Ice And Fire</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","export type Character = {\r\n  url: string; //\tThe hypermedia URL of this resource\r\n  name: string; // The name of this character\r\n  gender: string; // The gender of this character.\r\n  culture: string; // The culture that this character belongs to.\r\n  born: string; // Textual representation of when and where this character was born.\r\n  died: string; // Textual representation of when and where this character died.\r\n  titles: Array<string>; // The titles that this character holds.\r\n  aliases: Array<string>; // The aliases that this character goes by.\r\n  father: string; // The character resource URL of this character's father.\r\n  mother: string; // The character resource URL of this character's mother.\r\n  spouse: string; // Character resource URLs that has had a POV-chapter in this book.\r\n  allegiances: Array<string>; // An array of House resource URLs that this character is loyal to.\r\n  books: Array<string>; // An array of Book resource URLs that this character has been in.\r\n  povBooks: Array<string>; //\tAn array of Book resource URLs that this character has had a POV-chapter in.\r\n  tvSeries: Array<string>; //\tAn array of names of the seasons of Game of Thrones that this character has been in.\r\n  playedBy: Array<string>; //\tAn array of actor names that has played this character in the TV show Game Of Thrones.\r\n};\r\n\r\nexport type CharactersRequestData = {\r\n  page: number;\r\n  pageSize: number;\r\n  gender: string;\r\n  culture: string;\r\n};\r\n\r\nexport type CharactersFilterData = {\r\n  gender: string;\r\n  culture: string;\r\n};\r\n\r\nexport type CharactersPaginationData = {\r\n  page: number;\r\n  pageSize: number;\r\n};\r\n\r\nexport type CharactersData = Array<Character>;\r\n\r\nexport type CharactersResponse = {\r\n  data: CharactersData;\r\n  lastPage: number;\r\n};\r\n\r\nexport type CharactersState = {\r\n  data: CharactersData;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  requestData: CharactersRequestData;\r\n  currentPage: number;\r\n  lastPage: number;\r\n};\r\n\r\nexport type CharactersSuccessPayload = {\r\n  data: CharactersData;\r\n  requestData: CharactersRequestData;\r\n  lastPage: number;\r\n};\r\n\r\nexport enum CharactersActionTypes {\r\n  GET_CHARACTERS_REQUEST = \"GET_CHARACTERS_REQUEST\",\r\n  GET_CHARACTERS_SUCCESS = \"GET_CHARACTERS_SUCCESS\",\r\n  GET_CHARACTERS_FAILURE = \"GET_CHARACTERS_FAILURE\",\r\n  SET_CHARACTERS_FILTER = \"SET_CHARACTERS_FILTER\",\r\n  SET_CHARACTERS_PAGINATION = \"SET_CHARACTERS_PAGINATION\",\r\n}\r\n\r\nexport type GetCharactersRequestAction = {\r\n  type: CharactersActionTypes.GET_CHARACTERS_REQUEST;\r\n};\r\n\r\nexport type GetCharactersSuccessAction = {\r\n  type: CharactersActionTypes.GET_CHARACTERS_SUCCESS;\r\n  payload: CharactersSuccessPayload;\r\n};\r\n\r\nexport type GetCharactersFailureAction = {\r\n  type: CharactersActionTypes.GET_CHARACTERS_FAILURE;\r\n  payload: string;\r\n};\r\n\r\nexport type SetCharactersFilterAction = {\r\n  type: CharactersActionTypes.SET_CHARACTERS_FILTER;\r\n  payload: CharactersFilterData;\r\n};\r\n\r\nexport type SetCharactersPaginationAction = {\r\n  type: CharactersActionTypes.SET_CHARACTERS_PAGINATION;\r\n  payload: CharactersPaginationData;\r\n};\r\n\r\nexport type CharactersActions =\r\n  | GetCharactersRequestAction\r\n  | GetCharactersSuccessAction\r\n  | GetCharactersFailureAction\r\n  | SetCharactersFilterAction\r\n  | SetCharactersPaginationAction;\r\n","import { Link } from \"react-router-dom\";\r\nimport { HOUSE_URL } from \"../data/constants\";\r\nimport { CharactersRequestData } from \"../data/types/character-types\";\r\n\r\nexport const extractQueryParams = (args: CharactersRequestData) =>\r\n  Object.entries(args)\r\n    .filter(([_, value]) => Boolean(value))\r\n    .map(([key, value]) => `${key}=${value}`)\r\n    .join(\"&\");\r\n\r\nexport const extractLastPageNumber = (headers: Headers) =>\r\n  parseInt(\r\n    headers\r\n      .get(\"Link\")\r\n      ?.split(\",\")\r\n      .filter((path) => path.includes(\"last\"))?.[0]\r\n      .match(/page=([0-9]+)/)?.[1] || \"1\",\r\n  );\r\n\r\nexport const resolveCharacterNames = (name: string, aliases: Array<string>) => {\r\n  const isNameSet = Boolean(name);\r\n  const areAliasesSet = Boolean(aliases.join());\r\n  let characterNames = \"Unknown\";\r\n\r\n  if (isNameSet && areAliasesSet) {\r\n    characterNames = `${name}, ${aliases.join(\", \")}`;\r\n  } else if (isNameSet) {\r\n    characterNames = name;\r\n  } else if (areAliasesSet) {\r\n    characterNames = aliases.join(\", \");\r\n  }\r\n\r\n  return characterNames;\r\n};\r\n\r\nexport const resolveCharacterAliveInfo = (born: string, died: string) => {\r\n  const isBornValueSet = Boolean(born);\r\n  const isDiedValueSet = Boolean(died);\r\n  const isCharacterAlive = isBornValueSet && !isDiedValueSet;\r\n  const isCharacterDead = isBornValueSet && isDiedValueSet;\r\n  let aliveInfo = \"Unknown\";\r\n\r\n  if (isCharacterAlive) {\r\n    aliveInfo = \"Yes\";\r\n  } else if (isCharacterDead) {\r\n    const bornYears = born.match(/[0-9]+/g);\r\n    const yearOfDeath = died.match(/[0-9]+/g);\r\n\r\n    // (BK) => just in case of an extreme 'edgecase' when years data might be broken\r\n    if (!yearOfDeath || !bornYears) {\r\n      return aliveInfo;\r\n    }\r\n\r\n    const yearOfBirth =\r\n      bornYears.length === 1\r\n        ? parseInt(bornYears[0])\r\n        : Math.max(parseInt(bornYears[0]), parseInt(bornYears[1]));\r\n\r\n    const characterAge = parseInt(yearOfDeath[0]) - yearOfBirth;\r\n\r\n    aliveInfo = `No, died at ${characterAge} years old`;\r\n  }\r\n\r\n  return aliveInfo;\r\n};\r\n\r\nexport const resolveAllegiancesList = (allegiances: Array<string>) => {\r\n  return Boolean(allegiances.length) ? (\r\n    <ul>\r\n      {allegiances.map((url, index) => {\r\n        const localUrl = url.substring(url.lastIndexOf(\"/\") + 1);\r\n        return (\r\n          <li key={`${url}-${index}`}>\r\n            <Link to={`${HOUSE_URL}/${localUrl}`}>{`House-#${index + 1}`}</Link>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  ) : (\r\n    \" - \"\r\n  );\r\n};\r\n","import { extractLastPageNumber, extractQueryParams } from \"../utils\";\r\nimport {\r\n  CHARACTERS_ENDPOINT,\r\n  HOUSES_ENDPOINT,\r\n  HOUSE_FETCHING_ERROR_MSG,\r\n} from \"./constants\";\r\nimport {\r\n  CharactersRequestData,\r\n  CharactersResponse,\r\n  CharactersData,\r\n} from \"./types/character-types\";\r\nimport { House } from \"./types/house-types\";\r\n\r\nexport class APIProvider {\r\n  public static async getHouseData(houseId: string): Promise<House> {\r\n    try {\r\n      let data: House;\r\n      let response = await fetch(`${HOUSES_ENDPOINT}/${houseId}`);\r\n\r\n      const { ok, status } = response;\r\n\r\n      if (ok) {\r\n        data = await response.json();\r\n        return data;\r\n      } else {\r\n        const isHouseNotFound = status === 404;\r\n\r\n        const errorMessage = isHouseNotFound\r\n          ? HOUSE_FETCHING_ERROR_MSG\r\n          : `Something went wrong - Error: ${status}`;\r\n        throw new Error(errorMessage);\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  public static async getCharacters(\r\n    args: CharactersRequestData,\r\n  ): Promise<CharactersResponse> {\r\n    try {\r\n      const queryParams = extractQueryParams(args);\r\n\r\n      let data: CharactersData;\r\n      let response = await fetch(`${CHARACTERS_ENDPOINT}/?${queryParams}`);\r\n\r\n      const { ok, status, headers } = response;\r\n\r\n      if (ok) {\r\n        data = await response.json();\r\n        const lastPage = extractLastPageNumber(headers);\r\n\r\n        return { data, lastPage };\r\n      } else {\r\n        const errorMessage = `Something went wrong - Error: ${status}`;\r\n        throw new Error(errorMessage);\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { APIProvider } from \"../data/api-provider\";\r\nimport { HouseFetcherState } from \"../data/types/house-types\";\r\n\r\nconst useHouseFetcher = (houseId: string) => {\r\n  const [state, setState] = useState<HouseFetcherState>({\r\n    isLoading: true,\r\n  });\r\n\r\n  const loadHouse = async (houseId: string) => {\r\n    try {\r\n      const data = await APIProvider.getHouseData(houseId);\r\n      setState((prev) => ({ ...prev, data, isLoading: false }));\r\n    } catch (error) {\r\n      setState((prev) => ({ ...prev, error: error.toString() }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadHouse(houseId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [houseId]);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useHouseFetcher;\r\n","import {\r\n  CHARACTERS_COLUMNS_NAMES,\r\n  CharacterColumnName,\r\n} from \"../data/constants\";\r\nimport { Character } from \"../data/types/character-types\";\r\nimport {\r\n  resolveCharacterNames,\r\n  resolveCharacterAliveInfo,\r\n  resolveAllegiancesList,\r\n} from \"../utils\";\r\n\r\nconst useColumnsRenderer = (\r\n  columnsNames: typeof CHARACTERS_COLUMNS_NAMES,\r\n  data: Character,\r\n) => {\r\n  const {\r\n    name,\r\n    aliases,\r\n    born,\r\n    died,\r\n    gender,\r\n    culture,\r\n    allegiances,\r\n    books,\r\n    url,\r\n  } = data;\r\n\r\n  return columnsNames.map((columnName, index) => {\r\n    let columnValue: React.ReactNode = null;\r\n\r\n    switch (columnName) {\r\n      case CharacterColumnName.Character:\r\n        columnValue = resolveCharacterNames(name, aliases);\r\n        break;\r\n      case CharacterColumnName.Alive:\r\n        columnValue = resolveCharacterAliveInfo(born, died);\r\n        break;\r\n      case CharacterColumnName.Gender:\r\n        columnValue = Boolean(gender) ? gender : \"Unknown\";\r\n        break;\r\n      case CharacterColumnName.Culture:\r\n        columnValue = Boolean(culture) ? culture : \"Unknown\";\r\n        break;\r\n      case CharacterColumnName.Allegiances:\r\n        columnValue = resolveAllegiancesList(allegiances);\r\n        break;\r\n      case CharacterColumnName.NumberOfBooks:\r\n        columnValue = books.length.toString();\r\n        break;\r\n    }\r\n\r\n    return <td key={`${url}-${index}`}>{columnValue}</td>;\r\n  });\r\n};\r\n\r\nexport default useColumnsRenderer;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../data/store\";\r\n\r\nconst useNavBarSelector = () =>\r\n  useSelector(\r\n    ({\r\n      requestData: { pageSize: rootPageSize },\r\n      currentPage,\r\n      lastPage,\r\n      data,\r\n    }: RootState) => ({\r\n      rootPageSize,\r\n      rootCurrentPage: currentPage,\r\n      rootLastPage: lastPage,\r\n      isNavBarHidden: !Boolean(data.length),\r\n      isDisplayingFirstPage: currentPage === 1,\r\n      isDisplayingLastPage: currentPage === lastPage,\r\n    }),\r\n  );\r\n\r\nexport default useNavBarSelector;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../data/store\";\r\n\r\nconst useToolbarSelector = () =>\r\n  useSelector(({ requestData: { gender, culture }, isLoading }: RootState) => ({\r\n    rootGender: gender,\r\n    rootCulture: culture,\r\n    isToolbarDisabled: Boolean(isLoading),\r\n  }));\r\n\r\nexport default useToolbarSelector;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../data/store\";\r\n\r\nconst useCharactersPageSelector = () =>\r\n  useSelector(({ data, isLoading, error, requestData }: RootState) => ({\r\n    data,\r\n    isLoading,\r\n    error,\r\n    requestData,\r\n  }));\r\n\r\nexport default useCharactersPageSelector;\r\n","import { CHARACTERS_COLUMNS_NAMES } from \"../../data/constants\";\r\nimport { Character } from \"../../data/types/character-types\";\r\nimport { useColumnsRenderer } from \"../../hooks\";\r\n\r\nexport const TableRow: React.FC<{ data: Character }> = ({ data }) => {\r\n  const columns = useColumnsRenderer(CHARACTERS_COLUMNS_NAMES, data);\r\n  return <tr key={data.url}>{columns}</tr>;\r\n};\r\n","import { CharactersData } from \"../../data/types/character-types\";\r\nimport { TableRow } from \"./TableRow\";\r\n\r\nexport const TableBody: React.FC<{ data: CharactersData }> = ({ data }) => {\r\n  return (\r\n    <tbody>\r\n      {data.map((character) => (\r\n        <TableRow data={character} key={character.url} />\r\n      ))}\r\n    </tbody>\r\n  );\r\n};\r\n","export const TableHead: React.FC<{ columnsNames: Array<string> }> = ({\r\n  columnsNames,\r\n}) => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {columnsNames.map((columnName) => (\r\n          <th key={columnName}>{columnName}</th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n","import { CHARACTERS_COLUMNS_NAMES } from \"../../data/constants\";\r\nimport { CharactersData } from \"../../data/types/character-types\";\r\nimport { TableBody } from \"./TableBody\";\r\nimport { TableHead } from \"./TableHead\";\r\nimport \"./CharactersTable.scss\";\r\n\r\ntype Props = {\r\n  data: CharactersData;\r\n};\r\n\r\nconst CharactersTable: React.FC<Props> = ({ data }) => {\r\n  return (\r\n    <table className=\"characters-table\">\r\n      <TableHead columnsNames={CHARACTERS_COLUMNS_NAMES} />\r\n      <TableBody data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default CharactersTable;\r\n","import React from \"react\";\r\nimport \"./ErrorInfo.scss\";\r\n\r\ntype Props = {\r\n  errorMsg: string;\r\n};\r\n\r\nconst ErrorInfo: React.FC<Props> = ({ errorMsg }) => {\r\n  return (\r\n    <div className=\"error-info\">\r\n      <h3 className=\"error-info__title\">Something went wrong...</h3>\r\n      <p className=\"error-info__message\">{errorMsg}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorInfo;\r\n","import React from \"react\";\r\nimport \"./LoadingIndicator.scss\";\r\n\r\ntype Props = { resourceName: string };\r\n\r\nconst LoadingIndicator: React.FC<Props> = ({ resourceName }) => {\r\n  return (\r\n    <h3 className=\"loading-indicator\">{`Loading ${resourceName} data...`}</h3>\r\n  );\r\n};\r\n\r\nexport default LoadingIndicator;\r\n","import { Dispatch } from \"react\";\r\nimport { APIProvider } from \"./api-provider\";\r\nimport { AppThunk } from \"./store\";\r\nimport {\r\n  GetCharactersRequestAction,\r\n  CharactersActionTypes,\r\n  CharactersSuccessPayload,\r\n  GetCharactersSuccessAction,\r\n  GetCharactersFailureAction,\r\n  CharactersRequestData,\r\n  CharactersActions,\r\n  CharactersFilterData,\r\n  SetCharactersFilterAction,\r\n  CharactersPaginationData,\r\n  SetCharactersPaginationAction,\r\n} from \"./types/character-types\";\r\n\r\nexport const getCharactersRequest = (): GetCharactersRequestAction => ({\r\n  type: CharactersActionTypes.GET_CHARACTERS_REQUEST,\r\n});\r\n\r\nexport const getCharactersSuccess = (\r\n  payload: CharactersSuccessPayload,\r\n): GetCharactersSuccessAction => ({\r\n  type: CharactersActionTypes.GET_CHARACTERS_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const getCharactersFailure = (\r\n  payload: string,\r\n): GetCharactersFailureAction => ({\r\n  type: CharactersActionTypes.GET_CHARACTERS_FAILURE,\r\n  payload,\r\n});\r\n\r\nexport const getCharacters =\r\n  (args: CharactersRequestData): AppThunk =>\r\n  async (dispatch: Dispatch<CharactersActions>) => {\r\n    try {\r\n      dispatch(getCharactersRequest());\r\n\r\n      const { data, lastPage } = await APIProvider.getCharacters(args);\r\n\r\n      dispatch(\r\n        getCharactersSuccess({\r\n          data,\r\n          requestData: args,\r\n          lastPage,\r\n        }),\r\n      );\r\n    } catch (error) {\r\n      dispatch(getCharactersFailure(\"Error during getting characters data...\"));\r\n    }\r\n  };\r\n\r\nexport const SetCharactersFilter = (\r\n  payload: CharactersFilterData,\r\n): SetCharactersFilterAction => ({\r\n  type: CharactersActionTypes.SET_CHARACTERS_FILTER,\r\n  payload,\r\n});\r\n\r\nexport const SetCharactersPagination = (\r\n  payload: CharactersPaginationData,\r\n): SetCharactersPaginationAction => ({\r\n  type: CharactersActionTypes.SET_CHARACTERS_PAGINATION,\r\n  payload,\r\n});\r\n","import \"./PageButton.scss\";\r\n\r\ntype Props = {\r\n  isDisabled: boolean;\r\n  label: string;\r\n  [key: string]: any;\r\n};\r\n\r\nconst PageButton: React.FC<Props> = ({ isDisabled, label, ...rest }) => (\r\n  <input\r\n    type=\"button\"\r\n    className=\"page-btn\"\r\n    disabled={isDisabled}\r\n    value={label}\r\n    {...rest}\r\n  />\r\n);\r\n\r\nexport default PageButton;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SetCharactersPagination } from \"../../data/actions\";\r\nimport { useNavBarSelector } from \"../../hooks\";\r\nimport { PageButton } from \"../PageButton\";\r\nimport \"./NavBar.scss\";\r\n\r\nconst NavBar: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    rootPageSize,\r\n    rootCurrentPage,\r\n    rootLastPage,\r\n    isNavBarHidden,\r\n    isDisplayingFirstPage,\r\n    isDisplayingLastPage,\r\n  } = useNavBarSelector();\r\n  const [rowsPerPage, setRowsPerPage] = useState(rootPageSize);\r\n  const [currentPage, setCurrentPage] = useState(rootCurrentPage);\r\n\r\n  const handleOnChangeRowsPerPage = (\r\n    evt: React.ChangeEvent<HTMLSelectElement>,\r\n  ) => setRowsPerPage(parseInt(evt.target.value));\r\n\r\n  const handleOnLoadFirstPage = () => {\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleOnLoadPrevPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage((prev) => prev - 1);\r\n    }\r\n  };\r\n\r\n  const handleOnLoadNextPage = () => {\r\n    if (currentPage < rootLastPage) {\r\n      setCurrentPage((prev) => prev + 1);\r\n    }\r\n  };\r\n\r\n  const handleOnLoadLastPage = () => {\r\n    setCurrentPage(rootLastPage);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      SetCharactersPagination({\r\n        page: 1,\r\n        pageSize: rowsPerPage,\r\n      }),\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [rowsPerPage]);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      SetCharactersPagination({\r\n        page: currentPage,\r\n        pageSize: rowsPerPage,\r\n      }),\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentPage]);\r\n\r\n  return isNavBarHidden ? null : (\r\n    <nav className=\"nav-bar\">\r\n      <label>\r\n        Rows per page:\r\n        <select\r\n          className=\"nav-bar__rows-per-page\"\r\n          value={rowsPerPage}\r\n          onChange={handleOnChangeRowsPerPage}\r\n        >\r\n          <option value={10}>10</option>\r\n          <option value={25}>25</option>\r\n          <option value={50}>50</option>\r\n        </select>\r\n      </label>\r\n      <span className=\"nav-bar__page-info\">{`Page ${rootCurrentPage} of ${rootLastPage}`}</span>\r\n      <div className=\"nav-bar__buttons-group\">\r\n        <PageButton\r\n          label=\"First\"\r\n          isDisabled={isDisplayingFirstPage}\r\n          onClick={handleOnLoadFirstPage}\r\n        />\r\n        <PageButton\r\n          label=\"Prev\"\r\n          isDisabled={isDisplayingFirstPage}\r\n          onClick={handleOnLoadPrevPage}\r\n        />\r\n        <PageButton\r\n          label=\"Next\"\r\n          isDisabled={isDisplayingLastPage}\r\n          onClick={handleOnLoadNextPage}\r\n        />\r\n        <PageButton\r\n          label=\"Last\"\r\n          isDisabled={isDisplayingLastPage}\r\n          onClick={handleOnLoadLastPage}\r\n        />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SetCharactersFilter } from \"../../data/actions\";\r\nimport { useToolbarSelector } from \"../../hooks\";\r\nimport \"./Toolbar.scss\";\r\n\r\nconst Toolbar: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { rootCulture, rootGender, isToolbarDisabled } = useToolbarSelector();\r\n  const [culture, setCulture] = useState(rootCulture);\r\n  const [gender, setGender] = useState(rootGender);\r\n\r\n  const handleOnChangeCulture = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const {\r\n      target: { value },\r\n    } = evt;\r\n    const isCultureReset = !Boolean(value.length);\r\n    const isCultureValueValid = Boolean(value.trim().length);\r\n\r\n    if (isCultureReset || isCultureValueValid) {\r\n      setCulture(value);\r\n    }\r\n  };\r\n\r\n  const handleOnChangeGender = (evt: React.ChangeEvent<HTMLSelectElement>) =>\r\n    setGender(evt.target.value);\r\n\r\n  useEffect(() => {\r\n    dispatch(SetCharactersFilter({ culture, gender }));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [culture, gender]);\r\n\r\n  return (\r\n    <div className=\"toolbar\">\r\n      <label htmlFor=\"culture\">\r\n        Culture:\r\n        <input\r\n          type=\"search\"\r\n          id=\"culture\"\r\n          value={culture}\r\n          onChange={handleOnChangeCulture}\r\n          disabled={isToolbarDisabled}\r\n        />\r\n      </label>\r\n      <label htmlFor=\"gender\">\r\n        Gender:\r\n        <select\r\n          id=\"gender\"\r\n          value={gender}\r\n          onChange={handleOnChangeGender}\r\n          disabled={isToolbarDisabled}\r\n        >\r\n          <option value=\"\"> - Select gender - </option>\r\n          <option value=\"male\">Male</option>\r\n          <option value=\"female\">Female</option>\r\n          <option value=\"unknown\">Unknown</option>\r\n        </select>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CharactersTable } from \"../../components/CharactersTable\";\r\nimport { ErrorInfo } from \"../../components/ErrorInfo\";\r\nimport { LoadingIndicator } from \"../../components/LoadingIndicator\";\r\nimport { NavBar } from \"../../components/NavBar\";\r\nimport { Toolbar } from \"../../components/Toolbar\";\r\nimport { getCharacters } from \"../../data/actions\";\r\nimport { useCharactersPageSelector } from \"../../hooks\";\r\n\r\nimport \"./CharactersPage.scss\";\r\n\r\nconst CharactersPage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, isLoading, error, requestData } = useCharactersPageSelector();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCharacters(requestData));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    requestData.culture,\r\n    requestData.gender,\r\n    requestData.page,\r\n    requestData.pageSize,\r\n  ]);\r\n\r\n  let pageBody = null;\r\n\r\n  if (error) {\r\n    pageBody = <ErrorInfo errorMsg={error} />;\r\n  } else if (isLoading) {\r\n    pageBody = <LoadingIndicator resourceName=\"characters\" />;\r\n  } else if (data) {\r\n    pageBody = Boolean(data.length) ? (\r\n      <CharactersTable data={data} />\r\n    ) : (\r\n      \"No characters found\"\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"characters-page\">\r\n      <h2 className=\"characters-page__title\">Characters</h2>\r\n      <Toolbar />\r\n      <section className=\"characters-page__body\">{pageBody}</section>\r\n      <NavBar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharactersPage;\r\n","import React from \"react\";\r\nimport { HOUSE_DETAILS_DICTIONARY } from \"../../data/constants\";\r\nimport { House, HouseDetailsDictionary } from \"../../data/types/house-types\";\r\nimport \"./HouseDetailsList.scss\";\r\n\r\ntype Props = {\r\n  houseData: House;\r\n};\r\n\r\nconst getPropertyValue = (propertyName: string, houseData: House) => {\r\n  const propertyValue = houseData[propertyName];\r\n\r\n  switch (propertyName) {\r\n    case \"titles\":\r\n    case \"seats\":\r\n      return Boolean(propertyValue.length > 1)\r\n        ? (propertyValue as Array<string>).join(\", \")\r\n        : \"Unknown\";\r\n    case \"overlord\":\r\n      return Boolean(propertyValue) ? \"Yes\" : \"No\";\r\n    case \"diedOut\":\r\n      return Boolean(propertyValue) ? propertyValue : \"No\";\r\n    case \"cadetBranches\":\r\n      return propertyValue.length;\r\n    default:\r\n      return Boolean(propertyValue) ? propertyValue : \"Unknown\";\r\n  }\r\n};\r\n\r\nconst renderListItems = (\r\n  houseDetailsDictionary: HouseDetailsDictionary,\r\n  houseData: House,\r\n) => {\r\n  const houseDetailsKeys = Object.keys(houseDetailsDictionary);\r\n\r\n  return Object.entries(houseData).map(([propertyName]) => {\r\n    if (houseDetailsKeys.includes(propertyName)) {\r\n      const propertyTitle = HOUSE_DETAILS_DICTIONARY[propertyName];\r\n      const propertyValue = getPropertyValue(propertyName, houseData);\r\n\r\n      return (\r\n        <li key={propertyName}>\r\n          <span>{`${propertyTitle}: `}</span>\r\n          {propertyValue}\r\n        </li>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  });\r\n};\r\n\r\nconst HouseDetailsList: React.FC<Props> = ({ houseData }) => {\r\n  return (\r\n    <ul className=\"house-details-list\">\r\n      {renderListItems(HOUSE_DETAILS_DICTIONARY, houseData)}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default HouseDetailsList;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./NavigationButton.scss\";\r\n\r\ntype NavigationButtonProps = {\r\n  linkText: string;\r\n  link: string;\r\n};\r\n\r\nconst NavigationButton: React.FC<NavigationButtonProps> = ({\r\n  link,\r\n  linkText,\r\n}) => {\r\n  return (\r\n    <Link to={link} className=\"nav-btn\">\r\n      {linkText}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default NavigationButton;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ErrorInfo } from \"../../components/ErrorInfo\";\r\nimport { HouseDetailsList } from \"../../components/HouseDetailsList\";\r\nimport { LoadingIndicator } from \"../../components/LoadingIndicator\";\r\nimport { NavigationButton } from \"../../components/NavigationButton\";\r\nimport { ROOT_URL } from \"../../data/constants\";\r\nimport { HouseIdParam } from \"../../data/types/house-types\";\r\nimport { useHouseFetcher } from \"../../hooks\";\r\nimport \"./HousePage.scss\";\r\n\r\nconst HousePage: React.FC = () => {\r\n  const { houseId } = useParams<HouseIdParam>();\r\n  const { isLoading, data, error } = useHouseFetcher(houseId);\r\n\r\n  let pageContent = null;\r\n\r\n  if (error) {\r\n    pageContent = <ErrorInfo errorMsg={error} />;\r\n  } else if (isLoading) {\r\n    pageContent = <LoadingIndicator resourceName=\"house\" />;\r\n  } else if (data) {\r\n    const { name } = data;\r\n\r\n    pageContent = (\r\n      <div className=\"house-page\">\r\n        <NavigationButton linkText=\"Back To Characters\" link={ROOT_URL} />\r\n        <h2 className=\"house-page__name\">{name}</h2>\r\n        <HouseDetailsList houseData={data} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return pageContent;\r\n};\r\n\r\nexport default HousePage;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { HOUSE_URL, ROOT_URL } from \"../../data/constants\";\r\nimport { CharactersPage } from \"../../pages/CharactersPage\";\r\nimport { HousePage } from \"../../pages/HousePage\";\r\n\r\nimport \"./PageHolder.scss\";\r\n\r\nconst PageHolder: React.FC = () => {\r\n  return (\r\n    <div className=\"page-holder\">\r\n      <Switch>\r\n        <Route exact strict path={ROOT_URL} component={CharactersPage} />\r\n        <Route\r\n          exact\r\n          strict\r\n          path={`${HOUSE_URL}/:houseId`}\r\n          component={HousePage}\r\n        />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageHolder;\r\n","import { HashRouter as Router } from \"react-router-dom\";\nimport { AppHeader } from \"../layouts/AppHeader\";\nimport { PageHolder } from \"../layouts/PageHolder\";\n\nfunction App() {\n  return (\n    <Router>\n      <AppHeader />\n      <PageHolder />\n    </Router>\n  );\n}\n\nexport default App;\n","import {\r\n  CharactersState,\r\n  CharactersActions,\r\n  CharactersActionTypes,\r\n} from \"./types/character-types\";\r\n\r\nconst INITIAL_STATE: CharactersState = {\r\n  data: [],\r\n  isLoading: false,\r\n  error: null,\r\n  currentPage: 1,\r\n  lastPage: 1,\r\n  requestData: {\r\n    page: 1,\r\n    pageSize: 25,\r\n    gender: \"\",\r\n    culture: \"\",\r\n  },\r\n};\r\n\r\nexport const charactersReducer = (\r\n  state = INITIAL_STATE,\r\n  action: CharactersActions,\r\n): CharactersState => {\r\n  switch (action.type) {\r\n    case CharactersActionTypes.GET_CHARACTERS_REQUEST:\r\n      return { ...state, isLoading: true, error: null, data: [] };\r\n\r\n    case CharactersActionTypes.GET_CHARACTERS_SUCCESS:\r\n      const { data, requestData, lastPage } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data,\r\n        currentPage: requestData.page,\r\n        lastPage,\r\n        requestData,\r\n      };\r\n\r\n    case CharactersActionTypes.GET_CHARACTERS_FAILURE:\r\n      return { ...state, isLoading: false, error: action.payload, data: [] };\r\n\r\n    case CharactersActionTypes.SET_CHARACTERS_FILTER:\r\n      const { culture, gender } = action.payload;\r\n      return {\r\n        ...state,\r\n        requestData: { ...state.requestData, page: 1, culture, gender },\r\n      };\r\n\r\n    case CharactersActionTypes.SET_CHARACTERS_PAGINATION:\r\n      const { page, pageSize } = action.payload;\r\n      return {\r\n        ...state,\r\n        requestData: { ...state.requestData, page, pageSize },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.scss\";\nimport { App } from \"./app\";\nimport configureStore from \"./data/store\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","import { createStore, applyMiddleware, Action } from \"redux\";\r\nimport thunk, { ThunkAction } from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport { charactersReducer } from \"./reducer\";\r\n\r\nexport default function configureStore() {\r\n  const storeEnhancer = composeWithDevTools(applyMiddleware(thunk));\r\n\r\n  const store = createStore(charactersReducer, storeEnhancer);\r\n\r\n  if (process.env.NODE_ENV !== \"production\" && module.hot) {\r\n    module.hot.accept(\"./reducer.ts\", () =>\r\n      store.replaceReducer(charactersReducer),\r\n    );\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nexport type RootState = ReturnType<typeof charactersReducer>;\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n"],"sourceRoot":""}